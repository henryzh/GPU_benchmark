GPGPU-Sim Configuration options:

-network_mode                           1 # Interconnection network mode
-inter_config_file   baseline_icnt_config.txt # Interconnection network config file
-gpgpu_ptx_use_cuobjdump                    1 # Use cuobjdump to extract ptx and sass from binaries
-gpgpu_experimental_lib_support                    0 # Try to extract code from cuda libraries [Broken because of unknown cudaGetExportTable]
-gpgpu_ptx_convert_to_ptxplus                    0 # Convert SASS (native ISA) to ptxplus and run ptxplus
-gpgpu_ptx_force_max_capability                   20 # Force maximum compute capability
-gpgpu_ptx_inst_debug_to_file                    0 # Dump executed instructions' debug information to file
-gpgpu_ptx_inst_debug_file       inst_debug.txt # Executed instructions' debug output file
-gpgpu_ptx_inst_debug_thread_uid                    1 # Thread UID for executed instructions' debug output
-gpgpu_simd_model                       1 # 1 = post-dominator
-gpgpu_shader_core_pipeline              1536:32 # shader core pipeline config, i.e., {<nthread>:<warpsize>}
-gpgpu_tex_cache:l1  4:128:24,L:R:m:N,F:128:4,128:2 # per-shader L1 texture cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>:<rf>}
-gpgpu_const_cache:l1 64:64:2,L:R:f:N,A:2:32,4 # per-shader L1 constant memory cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_cache:il1     4:128:4,L:R:f:N,A:2:32,4 # shader L1 instruction cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_cache:dl1                     none # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gmem_skip_L1D                          0 # global memory access skip L1D cache (implements -Xptxas -dlcm=cg, default=no skip)
-gpgpu_perfect_mem                      0 # enable perfect memory mode (no cache miss)
-gpgpu_shader_registers                32768 # Number of registers per shader core. Limits number of concurrent CTAs. (default 8192)
-gpgpu_shader_cta                       8 # Maximum number of concurrent CTAs in shader (default 8)
-gpgpu_n_clusters                      16 # number of processing clusters
-gpgpu_n_cores_per_cluster                    1 # number of simd cores per cluster
-gpgpu_n_cluster_ejection_buffer_size                    8 # number of packets in ejection buffer
-gpgpu_n_ldst_response_buffer_size                    2 # number of response packets in ld/st unit ejection buffer
-gpgpu_shmem_size                   49152 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_num_banks                   32 # Number of banks in the shared memory in each shader core (default 16)
-gpgpu_shmem_limited_broadcast                    0 # Limit shared memory to do one broadcast per cycle (default on)
-gpgpu_shmem_warp_parts                    1 # Number of portions a warp is divided into for shared memory bank conflict check 
-gpgpu_warpdistro_shader                   -1 # Specify which shader core to collect the warp size distribution from
-gpgpu_local_mem_map                    1 # Mapping from local memory space address to simulated GPU physical address space (default = enabled)
-gpgpu_num_reg_banks                   16 # Number of register banks (default = 8)
-gpgpu_reg_bank_use_warp_id                    0 # Use warp ID in mapping registers to banks (default = off)
-gpgpu_operand_collector_num_units_sp                    6 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_sfu                    8 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_mem                    2 # number of collector units (default = 2)
-gpgpu_operand_collector_num_units_gen                    0 # number of collector units (default = 0)
-gpgpu_operand_collector_num_in_ports_sp                    2 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_gen                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_sp                    2 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_gen                    0 # number of collector unit in ports (default = 0)
-gpgpu_coalesce_arch                   13 # Coalescing arch (default = 13, anything else is off for now)
-gpgpu_num_sched_per_core                    2 # Number of warp schedulers per core
-gpgpu_max_insn_issue_per_warp                    1 # Max number of instructions that can be issued per warp in one cycle by scheduler
-gpgpu_simt_core_sim_order                    1 # Select the simulation order of cores in a cluster (0=Fix, 1=Round-Robin)
-gpgpu_pipeline_widths        2,1,1,2,1,1,2 # Pipeline widths ID_OC_SP,ID_OC_SFU,ID_OC_MEM,OC_EX_SP,OC_EX_SFU,OC_EX_MEM,EX_WB
-gpgpu_num_sp_units                     2 # Number of SP units (default=1)
-gpgpu_num_sfu_units                    1 # Number of SF units (default=1)
-gpgpu_num_mem_units                    1 # Number if ldst units (default=1) WARNING: not hooked up to anything
-gpgpu_scheduler                      lrr # Scheduler configuration: lrr|tl:num_active_warps default: lrr
-gpgpu_dram_scheduler                    1 # 0 = fifo, 1 = FR-FCFS (defaul)
-gpgpu_dram_partition_queues              8:8:8:8 # i2$:$2d:d2$:$2i
-l2_ideal                               0 # Use a ideal L2 cache that always hit
-gpgpu_cache:dl2     128:128:8,L:B:m:W,A:32:4,4 # unified banked L2 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>}
-gpgpu_cache:dl2_texture_only                    0 # L2 cache used for texture only
-gpgpu_n_mem                            8 # number of memory modules (e.g. memory controllers) in gpu
-gpgpu_n_mem_per_ctrlr                    2 # number of memory chips per memory controller
-gpgpu_memlatency_stat                   14 # track and display latency statistics 0x2 enables MC, 0x4 enables queue logs
-gpgpu_dram_sched_queue_size                   16 # 0 = unlimited (default); # entries per chip
-gpgpu_dram_buswidth                    4 # default = 4 bytes (8 bytes per cycle at DDR)
-gpgpu_dram_burst_length                    4 # Burst length of each DRAM request (default = 4 data bus cycle)
-dram_data_command_freq_ratio                    2 # Frequency ratio between DRAM data bus and command bus (default = 2 times, i.e. DDR)
-gpgpu_dram_timing_opt nbk=16:CCD=2:RRD=6:RCD=12:RAS=28:RP=12:RC=40: CL=12:WL=4:CDLR=5:WR=12:nbkgrp=4:CCDL=3:RTPL=2 # DRAM timing parameters = {nbk:tCCD:tRRD:tRCD:tRAS:tRP:tRC:CL:WL:tCDLR:tWR:nbkgrp:tCCDL:tRTPL}
-rop_latency                           80 # ROP queue latency (default 85)
-dram_latency                         100 # DRAM latency (default 30)
-use_ruby                               1 # Service global/local memory access via RUBY (1=On, 0=Off) (default=1)
-ruby_is_CMP                            1 # CMP Protocol used in RUBY (1=On (default), 0=Off)
-ruby_garnet                            1 # Use GARNET in RUBY (1=On (default), 0=Off)
-ruby_debug_start_time                    0 # When to start dumping debug traces in RUBY (0=Off)
-ruby_debug_filter_string                 none # String specifying which unit to monitor in debug traces in RUBY
-ruby_debug_verbosity_string                 none # String specifying the verbosity of debug traces in RUBY (none|low|med|high)
-ruby_debug_output_filename                 none # String specifying the output filename of debug traces in RUBY
-ruby_num_TBE                         128 # Number of TBEs for each unit (default=128)
-ruby_num_seq_entries                   64 # Number of entries in each sequencer (default=64)
-ruby_mshr_count                       64 # Number of Ruby MSHRs (default=64)
-ruby_mshr_size                        32 # Number of accesses that can be merged in each Ruby MSHR (default=32)
-ruby_flit_size                        32 # Flit size (default=32)
-ruby_vns                               5 # Number of virtual networks (default=2)
-ruby_vcs_per_class                     1 # Virtual channels per class (default=1)
-ruby_vc_buffer_size                    8 # Virtual channel buffer size in # flits (default=8)
-ruby_latencies                    70:100 # Minimum latencies in core cycles (L1->L2:L2->Mem) (default=70:100)
-ruby_latencies_multiplier              1.0:1.0 # Multiplier for ruby's latencies (L1->L2:L2->Mem) (default=1.0:1.0)
-ruby_l1_t_per_cycle                    1 # Number of transitions per Ruby L1 cache controller per cycle (default=32)
-ruby_l2_t_per_cycle                    1 # Number of transitions per Ruby L2 cache controller per cycle (default=32)
-ruby_dir_t_per_cycle                   32 # Number of transitions per Ruby memory controller per cycle (default=32)
-ruby_cl_fixed_lease                  800 # Cache Lease option - fixed lease time in Ruby/ICNT cycles (default=800)
-ruby_cl_predictor_type                    0 # Cache Lease option - predictor type. 0=fixed, 1=global, 2=perL2, 3=PC-fixed, 4=PC-adaptive, 5=addr-fixed, 6=oracle, 7=PCsampler (default=0)
-ruby_cl_pred_global              64:16:1 # Cache Lease option - predictor settings for global predictor (writeunexpired:l2evict:expiredhit) (default=64:16:1)
-ruby_cl_pred_perL2               64:16:1 # Cache Lease option - predictor settings for per-L2 predictor (writeunexpired:l2evict:expiredhit) (default=64:16:1)
-ruby_cl_pred_pcfixed lifetime_profiler_perpc.txt # Cache Lease option - predictor settings for PC-fixed predictor (inputfile) (default=lifetime_profiler_perpc.txt)
-ruby_cl_pred_pcadaptive              64:16:1 # Cache Lease option - predictor settings for PC-adaptive predictor (writeunexpired:l2evict:expiredhit) (default=64:16:1)
-ruby_cl_pred_addrfixed lifetime_profiler_peraddr.txt # Cache Lease option - predictor settings for Addr-fixed predictor (inputfile) (default=lifetime_profiler_peraddr.txt)
-ruby_send_memfence_to_protocol                    0 # Mem fence requests are sent to Ruby protocol (1=On (default), 0=Off)
-ruby_writes_stall_at_mshr                    1 # Write and atomics are stalled by pending requests in MSHRs (1=On, 0=Off (default) )
-ruby_single_write_per_warp                    0 # Only one outstanding write request per warp (1=On, 0=Off (default) )
-ruby_locality_profiler                 none # locality profiler configuration. Bins specified as pow2 {<start_bin>,<end_bin>, <skip_bin>}
-ruby_l1_assoc                          4 # Ruby L1 associativity (default=4)
-ruby_l1_sets_bits                      6 # Ruby L1 # of set bits (#sets=2^bits) (default=6)
-ruby_l2_assoc                          8 # Ruby L2 associativity (default=8)
-ruby_l2_sets_bits                      9 # Ruby L2 # of set bits (#sets=2^bits) (default=9)
-ruby_dir_assoc                         8 # Ruby Directory associativity (default=8)
-ruby_dir_sets_bits                     9 # Ruby Directory # of set bits (#sets=2^bits) (default=9)
-ruby_lifetime_profiler_perpc_outmode                    0 # Output mode for per-pc lifetime profiler (0=none, 1=stdout, 2=file, 3=both) (default=0)
-ruby_lifetime_profiler_perpc_outfile lifetime_profiler_perpc.txt # Filename for output of per-pc information from lifetime profiler (default=lifetime_profiler_perpc.txt)
-ruby_lifetime_profiler_peraddr_outmode                    0 # Output mode for per-address lifetime profiler (0=none, 1=stdout, 2=file, 3=both) (default=0)
-ruby_lifetime_profiler_peraddr_outfile lifetime_profiler_peraddr.txt # Filename for output of per-address information from lifetime profiler (default=lifetime_profiler_peraddr.txt)
-ruby_lifetimetrace                     0 # Lifetime trace enabled? (1=On, 0=Off (default) )
-ruby_lifetimetrace_outfile   lifetime_trace.txt # Filename for output of lifetime trace (default=lifetime_trace.txt)
-ruby_flush_L1D                         0 # Flush Ruby's L1D at kernel finish? (1=On, 0=Off (default) )
-gpgpu_mem_addr_mapping dramid@8;00000000.00000000.00000000.00000000.0000RRRR.RRRRRRRR.BBBBCCCC.CCSSSSSS # mapping memory address to dram model {dramid@<start bit>;<memory address map>}
-gpgpu_mem_addr_test                    0 # run sweep test to check address mapping for aliased address
-gpgpu_mem_address_mask                    1 # 0 = old addressing mask, 1 = new addressing mask, 2 = new add. mask + flipped bank sel and chip sel bits
-gpgpu_max_cycle                        0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_insn                         0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_cta                          0 # terminates gpu simulation early (0 = no limit)
-gpgpu_runtime_stat                 50000 # display runtime statistics such as dram utilization {<freq>:<flag>}
-gpgpu_flush_cache                      0 # Flush cache at the end of each kernel call
-gpgpu_deadlock_detect                    1 # Stop the simulation at deadlock (1=on (default), 0=off)
-gpu_deadlock_threshold               128000 # Deadlock threshold in # cycles (default=20000)
-gpgpu_ptx_instruction_classification                    0 # if enabled will classify ptx instruction types per kernel (Max 255 kernels now)
-gpgpu_ptx_sim_mode                     0 # Select between Performance (default) or Functional simulation (1)
-gpgpu_clock_domains 700.0:700.0:700.0:924.0 # Clock Domain Frequencies in MhZ {<Core Clock>:<ICNT Clock>:<L2 Clock>:<DRAM Clock>}
-gpgpu_scale_bandwidths              1.0:1.0 # Scale bandwidths by scaling clock frequencies with a multiplier {<ICNT Clock Multipler><DRAM Clock Multiplier>}
-gpgpu_max_concurrent_kernel                    8 # maximum kernels that can run concurrently on GPU
-gpgpu_cflog_interval                    0 # Interval between each snapshot in control flow logger
-visualizer_enabled                     0 # Turn on visualizer output (1=On, 0=Off)
-visualizer_outputfile                 NULL # Specifies the output log file for visualizer
-visualizer_zlevel                      6 # Compression level of the visualizer output log (0=no comp, 9=highest)
-enable_ptx_file_line_stats                    1 # Turn on PTX source line statistic profiling. (1 = On)
-ptx_line_stats_filename gpgpu_inst_stats.txt # Output file for PTX source line statistics.
-save_embedded_ptx                      1 # saves ptx files embedded in binary as <n>.ptx
-keep                                   0 # keep intermediate files created by GPGPU-Sim when interfacing with external programs
-gpgpu_ptx_save_converted_ptxplus                    0 # Saved converted ptxplus to a file
-ptx_opcode_latency_int         4,13,4,5,145 # Opcode latencies for integers <ADD,MAX,MUL,MAD,DIV>Default 1,1,19,25,145
-ptx_opcode_latency_fp          4,13,4,5,39 # Opcode latencies for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,30
-ptx_opcode_latency_dp         8,19,8,8,330 # Opcode latencies for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,335
-ptx_opcode_initiation_int            1,2,2,1,8 # Opcode initiation intervals for integers <ADD,MAX,MUL,MAD,DIV>Default 1,1,4,4,32
-ptx_opcode_initiation_fp            1,2,1,1,4 # Opcode initiation intervals for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,5
-ptx_opcode_initiation_dp         8,16,8,8,130 # Opcode initiation intervals for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,130
